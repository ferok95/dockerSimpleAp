stages:
  
- stage: BuildBackendServices

  pool:
    vmImage: ubuntu-latest

  jobs:
  - job: BuildDotnetBackend
    steps:
    - task: DotNetCoreCLI@2
      name: BuildDotNetApp
      inputs:
        command: 'build'
        projects: '**/MyFirstAzureWebApp/MyFirstAzureWebApp.csproj'
    - task: DotNetCoreCLI@2
      name: PublishDotNetApp
      inputs:
        command: 'publish'
        publishWebProjects: true
    - task: AzureWebApp@1
      name: DeploytoWebApp
      inputs:
        azureSubscription: 'sub-06(82fec995-d706-4757-a002-6bfc2d89631a)'
        appType: 'webApp'
        appName: 'mf01dev'
        package: '$(System.DefaultWorkingDirectory)/**/*.zip'
        deploymentMethod: 'zipDeploy'
  
  - job: BuildDocker_SalesBookLB
    displayName: BuildDockerService-SalesBook.LB
    steps:
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        Dockerfile: '**/SalesBook.LB/Dockerfile'
        containerRegistry: 'sub06-meritoacrmf'
        repository: 'SalesBook.LB'
        tags: |
          latest
          $(Build.SourceVersion)
      
  - job: BuildDocker_SalesBookWEB
    displayName: BuildDockerService-SalesBook.WEB
    steps:
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        Dockerfile: '**/SalesBook.WEB/Dockerfile'
        containerRegistry: 'sub06-meritoacrmf'
        repository: 'SalesBook.WEB'
        tags: |
          latest
          $(Build.SourceVersion)

- stage: PushImages

  pool:
    vmImage: ubuntu-latest
  
  jobs:
  - job: listAllImages
    condition: succeeded()
    steps:
    - script: docker images

- stage: DeployToAKS
  
  pool:
    vmImage: ubuntu-latest
  
  jobs:
  - job: pushToK8s
    displayName: pushToK8s
    steps:
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'aks01-serviceconnection'
        manifests: '**/AKS/deployment.yaml'
  
- stage: changeTMconf
    
  pool: 
    vmImage: ubuntu-latest
    
  jobs:
  - job: increasTrafficManager0
    displayName: increasTrafficManager0
    steps:
    - script: echo "Deploying to development environment..."
      displayName: 'Deploy to Dev'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'sub-06(82fec995-d706-4757-a002-6bfc2d89631a)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab1 --weight 100 --type azureEndpoints
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab2 --weight 50 --type azureEndpoints
        useGlobalConfig: true    
  - job: waitForNext
    displayName: waitForNext
    dependsOn: increasTrafficManager0
    pool: server
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: '1'  # Adjust the delay time as needed
  - job: increasTrafficManager1
    dependsOn: waitForNext
    displayName: increasTrafficManager1
    steps:
    - script: echo "Deploying to development environment..."
      displayName: 'Deploy to Dev'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'sub-06(82fec995-d706-4757-a002-6bfc2d89631a)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab1 --weight 100 --type azureEndpoints
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab2 --weight 100 --type azureEndpoints
        useGlobalConfig: true 
  - job: waitForNext1
    pool: server
    displayName: waitForNext1
    dependsOn: increasTrafficManager1
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: '1'  # Adjust the delay time as needed
  - job: increasTrafficManager2
    displayName: increasTrafficManager2
    dependsOn: waitForNext1
    steps:
    - script: echo "Deploying to development environment..."
      displayName: 'Deploy to Dev'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'sub-06(82fec995-d706-4757-a002-6bfc2d89631a)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab1 --weight 100 --type azureEndpoints
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab2 --weight 200 --type azureEndpoints
        useGlobalConfig: true 
  - job: waitForNext2
    pool: server
    displayName: waitForNext2
    dependsOn: increasTrafficManager2
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: '1'  # Adjust the delay time as needed
  - job: increasTrafficManager3
    displayName: increasTrafficManager3
    dependsOn: waitForNext2
    steps:
    - script: echo "Deploying to development environment..."
      displayName: 'Deploy to Dev'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'sub-06(82fec995-d706-4757-a002-6bfc2d89631a)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab1 --weight 50 --type azureEndpoints
          az network traffic-manager endpoint update --resource-group global-net-rg --profile-name tfmeritomf --name ab2 --weight 900 --type azureEndpoints
        useGlobalConfig: true 
  
- stage: testing

  variables:
  - group: secrets
    
  pool: 
    vmImage: ubuntu-latest
  jobs:
  - job: testing
    displayName: testing
    steps:
    - script: echo "Deploying to development environment..." $(SKIPDEPLOYMENT)
    - script: echo $(dockerPassword) 
    - script: echo $(dockerUserName) 
    - script: |
        docker login -u $(dockerUserName) -p $(dockerPassword)
        docker image tag alpine:3.18 mifurm/alpinecustom:$(Build.BuildId)
        docker push mifurm/alpinecustom:$(Build.BuildId)
        